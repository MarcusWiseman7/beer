.color-primary {
    color: var(--main-color);
}

.is-wrapper {
    box-shadow: var(--box-border-shadow);
    padding: 16px;
    border-radius: var(--main-border-radius);
    background-color: var(--page);
    position: relative;
    overflow: hidden;
}

.img-object-fit-cover {
    width: 100%;
    height: 100%;
    object-fit: cover;
}

.d-flex-row-wrap {
    display: flex;
    align-items: center;
    flex-flow: row wrap;
}

.d-flex-column {
    display: flex;
    flex-direction: column;
}

.text-ellipsis {
    white-space: nowrap;
    overflow: hidden;
    text-overflow: ellipsis;
}

.image {
    &--is-rounded {
        border-radius: 50%;
        img {
            border-radius: 50% !important;
        }
    }
}

.reviews {
    &-holder {
        margin-bottom: 24px;
        padding-bottom: 24px;
        position: relative;
        &:not(&:last-child) {
            &:after {
                content: '';
                display: block;
                height: 1px;
                background: var(--border);
                width: calc(100% + 56px);
                position: absolute;
                bottom: 0;
                left: -28px;
            }
        }
    }
}

// page
.page {
    &-top {
        display: flex;
        align-items: center;
        justify-content: space-between;
        margin-bottom: 20px;
    }
}

// Hero content (image-content)
.page-hero {
    display: flex;
    flex-flow: wrap;
    gap: 28px;
    
    @media (min-width: $tablet) {
        flex-flow: row;
        gap: 36px;
    }

    @media (min-width: $desktop) {
        padding-bottom: 40px;
    }
    // left column
    &__image {
        position: relative;
        min-width: 190px;
        max-width: 190px;
        margin: 0 auto;

        @media (min-width: $tablet) {
            margin: 0;
        }

        .logo {
            max-width: 80px;
            border-radius: var(--main-border-radius);
            overflow: hidden;
        }

        // placeholder space...
        .image {
            display: flex;
            justify-content: center;
            align-items: center;
            position: relative;
            height: 190px;
            overflow: hidden;
            border-radius: var(--main-border-radius);
            background-color: var(--placeholder);

            > img {
                background-size: cover;
                position: absolute;
                width: 100%;
                height: 100%;
                border-radius: var(--main-border-radius);
            }

            .is-blured {
                position: absolute;
                left: 0;
                top: 0;
                width: 100% !important;
                height: 100% !important;
                max-width: 100% !important;
                max-height: 100% !important;
                filter: blur(15px) brightness(0.8);
                transform: scale(1.15);
                transform-origin: center;
                border-radius: 0;
            }
        }
    }
    // right column
    &__content {
        width: 100%;
        display: flex;
        flex-flow: column;
        gap: 8px;

        &__title {
            font-weight: 600;
            text-align: center;
            
            @media (min-width: $tablet) {
                text-align: left;
            }
        }
        &__subtitle {
            font-weight: 500;
            margin-bottom: 8px;
            text-align: center;

            @media (min-width: $tablet) {
                text-align: left;
            }
        }
        &__description {
            font-weight: 400;
            color: var(--text-3);        
            overflow: hidden;
        }
    }
}

.section {
    display: flex;
    flex-flow: column;
    gap: 20px;
    margin-top: var(--gap-section-default);

    &-title {
        // font-weight: 600;
        // font-size: 20px;
        // line-height: 26px;
        
    }

    &-content {

    }

    &-footer {

    }
    // Minus margin
    &--feed {
        .section-content {
            margin: 0 -28px;
            display: flex;
            flex-flow: column;
            gap: 40px;

            > div {
                padding-bottom: 28px;
                border-bottom: 1px solid var(--border);
                &:last-child {
                    border-bottom: none;
                }
            }
        }
    }

}


a {
    color: var(--link);

    &:hover {
        text-decoration: underline;
        cursor: pointer;
    }
}

button {
    outline: none;

    &:hover {
        cursor: pointer;
    }
}

.link {
    font-size: 14px;
    color: var(--text);

    @media (min-width: $desktop) {
        font-size: 16px;
    }

    &:hover {
        text-decoration: underline;
        cursor: pointer;
    }

    &--no-decoration {
        text-decoration: none;

        &:hover {
            text-decoration: none;
        }
    }
}

.grid {
    display: grid;
    @include grid-fr;

    @media (min-width: $tablet) {
        &--t {
            display: grid;

            @include grid-fr;
        }
    }

    @media (min-width: $desktop) {
        &--d {
            display: grid;

            @include grid-fr;
        }
    }
}

.flex {
    display: flex;
    flex-shrink: 1;
    
    &.column {
        flex-direction: column;
    }
}


.row {
    display: flex;
    align-items: center;

    // Align
    &--center {
        justify-content: center;
    }

    &--space-evenly {
        justify-content: space-evenly;
    }
   
    &--space-between {
        justify-content: space-between;
    }

    &--row--wrap {
        flex-flow: row wrap;
    }

    &--wrap {
        flex-wrap: wrap;
    }

    @media (min-width: $tablet) {
        &--t {
            &--start {
                justify-content: flex-start;
            }
    
            &--center {
                justify-content: center;
            }
    
            &--space-evenly {
                justify-content: space-evenly;
            }
        }
    }
}

.gap {
    @include primitivesToProperty(gap);

    &--t {
        @media (min-width: $tablet) {
            @include primitivesToProperty(gap);
        }
    }

    &--d {
        @media (min-width: $desktop) {
            @include primitivesToProperty(gap);
        }
    }
}